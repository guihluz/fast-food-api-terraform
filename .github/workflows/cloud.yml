name: Terraform AWS Deployment

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: 'us-east-1'
      TF_VAR_region: 'us-east-1'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'us-east-1'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Set S3 Bucket
        id: set_bucket_name
        run: echo "S3_BUCKET_NAME=remote-state-${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Check if S3 Bucket Exists
        id: s3_check
        run: |
          if aws s3 ls "s3://${{ env.S3_BUCKET_NAME }}" 2>&1 | grep -q 'NoSuchBucket'; then
            aws s3api create-bucket --bucket ${{ env.S3_BUCKET_NAME }} --region ${{ env.AWS_DEFAULT_REGION }} --create-bucket-configuration LocationConstraint=${{ env.AWS_DEFAULT_REGION }}
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.6

      - name: Terraform Init
        run: terraform init -force-copy -input=false -backend-config bucket=$INFRABUCKETSTATE

      - name: Terraform Plan
        run: terraform plan -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -out=plan.tfplan

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve plan.tfplan